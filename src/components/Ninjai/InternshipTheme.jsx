import React from "react";
import {
  Calendar,
  Bot,
  Database,
  Code,
  Smartphone,
  Brain,
  Globe,
  CircleCheckBig,
  Code as CodeIcon,
  Users,
  Award,
  Target,
} from "lucide-react";

const timeline = [
  {
    step: 1,
    time: "Tu·∫ßn 1-2",
    title: "H·ªçc th·ª≠ & ƒê·ªãnh h∆∞·ªõng",
    desc: "Th·ª±c t·∫≠p sinh tham gia tr·∫£i nghi·ªám mi·ªÖn ph√≠: l√†m quen quy tr√¨nh Agile, GitHub, x√¢y d·ª±ng portfolio c√° nh√¢n, t·∫°o chatbot AI c∆° b·∫£n v·ªõi React.js + API. ƒê∆∞·ª£c mentor h·ªó tr·ª£ v√† ƒë√°nh gi√° ƒë·ªãnh k·ª≥.",
  },
  {
    step: 2,
    time: "Tu·∫ßn 3-4",
    title: "Th·ª±c chi·∫øn Frontend",
    desc: "T·∫≠p trung x√¢y d·ª±ng giao di·ªán web chu·∫©n UX/UI b·∫±ng React.js, TailwindCSS. H·ªçc l√†m vi·ªác nh√≥m qua d·ª± √°n: landing page, h·ªá th·ªëng qu·∫£n l√Ω th·ª±c t·∫≠p sinh. Ti·∫øp c·∫≠n ki·∫øn th·ª©c responsive design, Git n√¢ng cao v√† animation.",
  },
  {
    step: 3,
    time: "Th√°ng th·ª© 2",
    title: "Backend & T∆∞ duy AI",
    desc: "L√†m vi·ªác v·ªõi Supabase, Firebase ho·∫∑c FastAPI, thi·∫øt k·∫ø API v√† x√¢y d·ª±ng h·ªá th·ªëng CMS/CRM. H·ªçc c√°ch t√≠ch h·ª£p AI: ph√¢n t√≠ch ng√¥n ng·ªØ (NLP), t·∫°o chatbot ƒëa nhi·ªám, s·ª≠ d·ª•ng API Gemini v√† prompt engineering.",
  },
  {
    step: 4,
    time: "Th√°ng th·ª© 3",
    title: "D·ª± √°n cu·ªëi k·ª≥ & K·∫øt n·ªëi doanh nghi·ªáp",
    desc: "Th·ª±c hi·ªán capstone project (AI/CRM/Chatbot/ERP) c√≥ mentor h∆∞·ªõng d·∫´n. ƒê∆∞·ª£c review, demo, ghi nh·∫≠n ƒë√≥ng g√≥p theo m√¥ h√¨nh 'c·ªï ph·∫ßn h√≥a nh√¢n l·ª±c'. K·∫øt n·ªëi doanh nghi·ªáp h√†ng ƒë·∫ßu trong n∆∞·ªõc v√† qu·ªëc t·∫ø nh∆∞ Nh·∫≠t B·∫£n & CHLB ƒê·ª©c, h·ªó tr·ª£ chu·∫©n b·ªã h·ªì s∆°/ph·ªèng v·∫•n.",
  },
];

const projects = [
  {
    icon: <Bot className="text-white w-8 h-8" />,
    gradient: "from-blue-500 to-purple-600",
    title: "AI Chatbot Platform",
    desc: "X√¢y d·ª±ng n·ªÅn t·∫£ng chatbot AI ƒëa ng√¥n ng·ªØ v·ªõi kh·∫£ nƒÉng h·ªçc h·ªèi v√† t√πy ch·ªânh theo t·ª´ng doanh nghi·ªáp.",
    tech: [
      "React + TypeScript Frontend",
      "Node.js + OpenAI API Backend",
      "Vector Database Integration",
      "Real-time Chat Interface",
    ],
  },
  {
    icon: <Database className="text-white w-8 h-8" />,
    gradient: "from-green-500 to-teal-600",
    title: "E-commerce CRM System",
    desc: "H·ªá th·ªëng qu·∫£n l√Ω kh√°ch h√†ng th√¥ng minh v·ªõi AI analytics v√† automation marketing.",
    tech: [
      "Next.js + Prisma Stack",
      "PostgreSQL Database",
      "AI-powered Analytics",
      "Email Automation",
    ],
  },
  {
    icon: <Code className="text-white w-8 h-8" />,
    gradient: "from-orange-500 to-red-600",
    title: "Blockchain DApp",
    desc: "·ª®ng d·ª•ng phi t·∫≠p trung cho vi·ªác qu·∫£n l√Ω v√† x√°c th·ª±c ch·ª©ng ch·ªâ gi√°o d·ª•c tr√™n blockchain.",
    tech: [
      "Solidity Smart Contracts",
      "Web3.js Integration",
      "MetaMask Wallet Connect",
      "IPFS File Storage",
    ],
  },
  {
    icon: <Smartphone className="text-white w-8 h-8" />,
    gradient: "from-purple-500 to-pink-600",
    title: "AI Learning Mobile App",
    desc: "·ª®ng d·ª•ng mobile h·ªçc t·∫≠p c√° nh√¢n h√≥a v·ªõi AI tutor v√† gamification elements.",
    tech: [
      "React Native + Expo",
      "Firebase Backend",
      "AI Recommendation Engine",
      "Offline Learning Support",
    ],
  },
  {
    icon: <Brain className="text-white w-8 h-8" />,
    gradient: "from-indigo-500 to-blue-600",
    title: "AI Data Analytics Platform",
    desc: "N·ªÅn t·∫£ng ph√¢n t√≠ch d·ªØ li·ªáu v·ªõi machine learning models v√† interactive dashboards.",
    tech: [
      "Python + FastAPI",
      "TensorFlow/PyTorch ML",
      "D3.js Data Visualization",
      "Real-time Data Processing",
    ],
  },
  {
    icon: <Globe className="text-white w-8 h-8" />,
    gradient: "from-teal-500 to-cyan-600",
    title: "IoT Smart Home System",
    desc: "H·ªá th·ªëng nh√† th√¥ng minh v·ªõi AI automation v√† voice control integration.",
    tech: [
      "Arduino/Raspberry Pi",
      "MQTT Protocol",
      "Voice Assistant Integration",
      "Mobile Control App",
    ],
  },
];

const benefits = [
  {
    icon: <CodeIcon className="text-blue-600" />,
    color: "bg-blue-100",
    title: "Hands-on Experience",
    desc: "L√†m vi·ªác v·ªõi code th·ª±c t·∫ø, kh√¥ng ch·ªâ tutorial",
  },
  {
    icon: <Users className="text-green-600" />,
    color: "bg-green-100",
    title: "Team Collaboration",
    desc: "H·ªçc c√°ch l√†m vi·ªác nh√≥m nh∆∞ trong c√¥ng ty",
  },
  {
    icon: <Award className="text-purple-600" />,
    color: "bg-purple-100",
    title: "Portfolio Building",
    desc: "X√¢y d·ª±ng portfolio ·∫•n t∆∞·ª£ng cho CV",
  },
  {
    icon: <Target className="text-orange-600" />,
    color: "bg-orange-100",
    title: "Industry Ready",
    desc: "Chu·∫©n b·ªã s·∫µn s√†ng cho m√¥i tr∆∞·ªùng l√†m vi·ªác",
  },
];

export default function InternshipTheme() {
  return (
    <section>
      {/* Timeline Section */}
      <div className="py-20">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-foreground text-center mb-12">
              üóìÔ∏è L·ªô tr√¨nh th·ª±c t·∫≠p 3 th√°ng
            </h2>
            <div className="space-y-8">
              {timeline.map((item) => (
                <div key={item.step} className="flex gap-6">
                  <div className="flex flex-col items-center">
                    <div className="w-12 h-12 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold">
                      {item.step}
                    </div>
                    {item.step !== timeline.length && (
                      <div className="w-0.5 h-20 bg-border mt-4"></div>
                    )}
                  </div>
                  <div className="flex-1 card-feature">
                    <div className="flex items-center gap-4 mb-3">
                      <span className="text-sm font-medium text-primary bg-primary/10 px-3 py-1 rounded-full">
                        {item.time}
                      </span>
                      <Calendar className="text-muted-foreground w-4 h-4" />
                    </div>
                    <h3 className="text-xl font-semibold text-foreground mb-2">
                      {item.title}
                    </h3>
                    <p className="text-muted-foreground">{item.desc}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      {/* Projects Section */}
      <div className="py-20 bg-gradient-to-br from-primary/5 to-secondary/10">
        <div className="container mx-auto px-4">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-foreground text-center mb-4">
              üöÄ D·ª± √°n th·ª±c t·∫≠p sinh tham gia
            </h2>
            <p className="text-lg text-muted-foreground text-center mb-12 max-w-3xl mx-auto">
              C√°c d·ª± √°n th·ª±c t·∫ø m√† th·ª±c t·∫≠p sinh s·∫Ω ƒë∆∞·ª£c tham gia ph√°t tri·ªÉn, t·ª´
              √Ω t∆∞·ªüng ƒë·∫øn s·∫£n ph·∫©m ho√†n ch·ªânh
            </p>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {projects.map((proj, idx) => (
                <div
                  key={idx}
                  className="card-elegant group hover:scale-[1.02] transition-all duration-300"
                >
                  <div
                    className={`flex items-center justify-center w-16 h-16 rounded-xl mb-4 mx-auto bg-gradient-to-br ${proj.gradient}`}
                  >
                    {proj.icon}
                  </div>
                  <h3 className="text-xl font-semibold text-foreground text-center mb-3">
                    {proj.title}
                  </h3>
                  <p className="text-muted-foreground text-center mb-4 leading-relaxed">
                    {proj.desc}
                  </p>
                  <div className="space-y-2">
                    {proj.tech.map((tech, i) => (
                      <div
                        key={i}
                        className="flex items-center text-sm text-muted-foreground"
                      >
                        <CircleCheckBig className="text-green-500 mr-2 w-4 h-4" />
                        <span>{tech}</span>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>

            {/* Benefits */}
            <div className="mt-16 card-elegant">
              <h3 className="text-2xl font-semibold text-foreground text-center mb-6">
                üí° L·ª£i √≠ch khi tham gia d·ª± √°n th·ª±c t·∫ø
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {benefits.map((b, i) => (
                  <div key={i} className="text-center">
                    <div
                      className={`w-12 h-12 ${b.color} rounded-full flex items-center justify-center mx-auto mb-3`}
                    >
                      {b.icon}
                    </div>
                    <h4 className="font-semibold text-foreground mb-2">
                      {b.title}
                    </h4>
                    <p className="text-sm text-muted-foreground">{b.desc}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
